--[[
███╗░░░███╗░█████╗░██╗░░██╗███████╗  ██████╗░██╗░░░██╗  ██╗░░██╗███████╗███╗░░██╗   ██╗██████╗░
████╗░████║██╔══██╗██║░██╔╝██╔════╝  ██╔══██╗╚██╗░██╔╝  ██║░██╔╝██╔════╝████╗░██║   ╚═╝██╔══██╗
██╔████╔██║███████║█████═╝░█████╗░░  ██████╦╝░╚████╔╝░  █████═╝░█████╗░░██╔██╗██║   ░░░██║░░██║
██║╚██╔╝██║██╔══██║██╔═██╗░██╔══╝░░  ██╔══██╗░░╚██╔╝░░  ██╔═██╗░██╔══╝░░██║╚████    ░░░██║░░██║
██║░╚═╝░██║██║░░██║██║░╚██╗███████╗  ██████╦╝░░░██║░░░  ██║░╚██╗███████╗██║░╚███║   ██╗██████╔╝
╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝░░╚═╝╚══════╝  ╚═════╝░░░░╚═╝░░░  ╚═╝░░╚═╝╚══════╝╚═╝░░╚══╝   ╚═╝╚═════╝░
Owner:CFrame#3720
]]
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v31)if (v1(v31,2)==79) then v20=v0(v3(v31,1,1));return "";else local v75=0;local v76;while true do if (v75==0) then v76=v2(v0(v31,16));if v20 then local v102=0;local v103;while true do if (v102==0) then v103=v5(v76,v20);v20=nil;v102=1;end if (v102==1) then return v103;end end else return v76;end break;end end end end);v21=nil;v18=1;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v32=0 -0 ;local v33;local v34;local v35;local v36;local v37;local v38;while true do local v68=0 + 0 ;while true do if (v68~=(1583 -(547 + 1036))) then else if (v32~=1) then else local v91=0 -0 ;while true do if (v91==(1 -0)) then v38={};v32=2 -0 ;break;end if (v91~=(0 -0)) then else local v109=1030 -(243 + 787) ;while true do if (v109==(1 + 0)) then v91=2 -1 ;break;end if (v109==(1948 -(21 + 1927))) then v36={v33,v34,nil,v35};v37=v24();v109=1537 -(916 + 620) ;end end end end end if (v32==(3 -1)) then local v92=0 -0 ;local v93;while true do if (v92==(0 -0)) then v93=0 -0 ;while true do if (v93~=(1393 -(206 + 1186))) then else for v112=1190 -(191 + 998) ,v24() do local v113=1565 -(127 + 1438) ;local v114;local v115;local v116;while true do if (v113==(723 -(568 + 155))) then v114=0 + 0 ;v115=nil;v113=959 -(187 + 771) ;end if (v113==(1 + 0)) then v116=nil;while true do if (v114~=0) then else v115=0 -0 ;v116=nil;v114=1872 -(1824 + 47) ;end if (v114~=(4 -3)) then else while true do if (v115==0) then v116=v22();if (v21(v116,3 -2 ,1)==0) then local v132=0 + 0 ;local v133;local v134;local v135;local v136;while true do if ((0 -0)==v132) then v133=0 + 0 ;v134=nil;v132=1 + 0 ;end if (v132==(1 + 0)) then v135=nil;v136=nil;v132=2 + 0 ;end if (v132==2) then while true do if (v133==(2 -1)) then local v269=0 -0 ;while true do if (v269==(2 -1)) then v133=2;break;end if (v269==0) then v136={v23(),v23(),nil,nil};if (v134==0) then local v352=0;local v353;while true do if (v352==(0 + 0)) then v353=0 + 0 ;while true do if (v353==(0 -0)) then v136[3]=v23();v136[1 + 3 ]=v23();break;end end break;end end elseif (v134==(1 + 0)) then v136[1 + 2 ]=v24();elseif (v134==(2 + 0)) then v136[3 + 0 ]=v24() -(2^(29 -13)) ;elseif (v134~=(1 + 2)) then else local v398=0 + 0 ;local v399;local v400;local v401;while true do if (v398==(839 -(281 + 557))) then v401=nil;while true do if (v399~=(684 -(335 + 348))) then else while true do if ((0 + 0)==v400) then v401=500 -(30 + 470) ;while true do if (v401==0) then v136[1186 -(74 + 1109) ]=v24() -((1 + 1)^(12 + 4)) ;v136[397 -(120 + 273) ]=v23();break;end end break;end end break;end if (v399==(0 -0)) then v400=0 + 0 ;v401=nil;v399=3 -2 ;end end break;end if (v398==0) then v399=777 -(593 + 184) ;v400=nil;v398=1076 -(451 + 624) ;end end end v269=1;end end end if (v133~=3) then else if (v21(v135,2 + 1 ,3)==(632 -(71 + 560))) then v136[4]=v38[v136[1797 -(1208 + 585) ]];end v33[v112]=v136;break;end if (v133~=(2 + 0)) then else local v271=0 -0 ;local v272;while true do if (v271~=(0 -0)) then else v272=0;while true do if (v272~=(1 + 0)) then else v133=3;break;end if (v272~=0) then else if (v21(v135,1,1)~=(2 -1)) then else v136[2]=v38[v136[2 + 0 ]];end if (v21(v135,2,1213 -(555 + 656) )~=1) then else v136[3]=v38[v136[1899 -(427 + 1469) ]];end v272=3 -2 ;end end break;end end end if ((0 -0)~=v133) then else local v273=0 + 0 ;local v274;while true do if (v273==(221 -(155 + 66))) then v274=0;while true do if (v274==0) then local v354=0;while true do if (v354==(1624 -(389 + 1234))) then v274=2 -1 ;break;end if (v354~=(0 + 0)) then else v134=v21(v116,4 -2 ,3 + 0 );v135=v21(v116,4,4 + 2 );v354=1428 -(1178 + 249) ;end end end if (v274~=(2 -1)) then else v133=1 + 0 ;break;end end break;end end end end break;end end end break;end end break;end end break;end end end v32=2 + 1 ;break;end if (v93~=(0 + 0)) then else for v117=1,v37 do local v118=0;local v119;local v120;local v121;while true do if (v118~=(0 + 0)) then else v119=0 -0 ;v120=nil;v118=2 -1 ;end if (v118==(1 + 0)) then v121=nil;while true do if (v119~=(1 + 0)) then else if (v120==(728 -(449 + 278))) then v121=v22()~=(0 + 0) ;elseif (v120==2) then v121=v25();elseif (v120==3) then v121=v26();end v38[v117]=v121;break;end if (v119~=(0 -0)) then else local v129=0 -0 ;local v130;while true do if ((0 + 0)==v129) then v130=0 -0 ;while true do if (v130==(2 -1)) then v119=1289 -(697 + 591) ;break;end if (0==v130) then local v139=0;while true do if (v139==(1933 -(1662 + 271))) then v120=v22();v121=nil;v139=1527 -(188 + 1338) ;end if (v139==1) then v130=1;break;end end end end break;end end end end break;end end end v36[3]=v22();v93=1;end end break;end end end v68=1;end if (v68==(3 -2)) then if (v32==(954 -(402 + 549))) then local v94=0 + 0 ;local v95;while true do if ((0 + 0)~=v94) then else v95=0;while true do local v110=0 + 0 ;while true do if (v110~=(0 + 0)) then else if (1==v95) then return v36;end if (v95==(1827 -(29 + 1798))) then for v124=1 + 0 ,v24() do v34[v124-(1946 -(1057 + 888)) ]=v29();end for v126=1,v24() do v35[v126]=v24();end v95=1;end break;end end end break;end end end if (v32~=(0 -0)) then else local v96=0 -0 ;while true do if (v96==(2 -1)) then v35={};v32=1;break;end if (v96~=(0 + 0)) then else v33={};v34={};v96=1;end end end break;end end end end v18=5;end if (v18==2) then function v23()local v39,v40=v1(v16,v19,v19 + (61 -(46 + 13)) );v19=v19 + 2 ;return (v40 * (228 + 28)) + v39 ;end v24=nil;function v24()local v41=0 + 0 ;local v42;local v43;local v44;local v45;while true do if (v41==(318 -(124 + 193))) then return (v45 * (16778403 -(492 + 695))) + (v44 * 65536) + (v43 * (2120 -(327 + 1537))) + v42 ;end if (v41==(0 + 0 + 0)) then v42,v43,v44,v45=v1(v16,v19,v19 + (1252 -(1073 + 176)) );v19=v19 + (508 -(159 + 345)) ;v41=1976 -(504 + 1471) ;end end end v25=nil;v18=3;end if (3==v18) then function v25()local v46=0 -0 ;local v47;local v48;local v49;local v50;local v51;local v52;while true do if ((196 -(121 + (1306 -(898 + 335))))==v46) then v51=v21(v48,104 -83 ,57 -26 );v52=((v21(v48,3 + 29 )==1) and  -(1086 -(350 + 735))) or (1 -0) ;v46=49 -(21 + (59 -34)) ;end if (v46==(1 -0)) then v49=1;v50=(v21(v48,(1607 -940) -(363 + 303) ,3 + 17 ) * (2^(357 -(249 + 76)))) + v47 ;v46=(4 + 1) -3 ;end if ((0 + 0)==v46) then v47=v24();v48=v24();v46=1 + 0 ;end if (v46==(1984 -(1206 + 775))) then if (v51==(0 + 0)) then if (v50==((1103 -511) -(210 + 174 + 165 + 43))) then return v52 * (0 -0) ;else local v104=0;while true do if (v104==0) then v51=1;v49=(1088 + 206) -(911 + 383) ;break;end end end elseif (v51==(2438 -((1865 -(1064 + 679)) + 269))) then return ((v50==((2395 -(624 + 659)) -(829 + (423 -(16 + 124))))) and (v52 * ((204 -(84 + 119))/(0 + 0 + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(1799 -(513 + 263)) ) * (v49 + (v50/((186 -(79 + 105))^(2 + (499 -(9 + 440)))))) ;end end end v26=nil;function v26(v53)local v54=(1935 -(145 + 6)) -(1119 + 665) ;local v55;local v56;while true do if (v54==(229 -(148 + 78))) then return v6(v56);end if (v54==(4 -2)) then v56={};for v79=(1039 + 759) -(1328 + 469) , #v55 do v56[v79]=v2(v1(v3(v55,v79,v79)));end v54=6 -3 ;end if (v54==(0 + 0 + 0)) then v55=nil;if  not v53 then v53=v24();if (v53==(0 -0)) then return "";end end v54=1;end if (v54==((1 -0) -0)) then v55=v3(v16,v19,(v19 + v53) -(964 -(711 + 161 + 91)) );v19=v19 + v53 ;v54=1325 -(266 + 1057) ;end end end v27=v24;v18=4;end if (v18==1) then function v21(v57,v58,v59)if v59 then local v77=(v57/((6 -4)^(v58-(2 -(2 -1)))))%((4 -2)^(((v59-(1 + 0)) -(v58-(1816 -(1098 + (1966 -(1036 + 213)))))) + 1)) ;return v77-(v77%(200 -(90 + 109))) ;else local v78=(6 -4)^(v58-(903 -(436 + 466))) ;return (((v57%(v78 + v78))>=v78) and 1) or 0 ;end end v22=nil;function v22()local v60=1414 -(29 + 1385) ;local v61;while true do if (v60==(0 -0)) then v61=v1(v16,v19,v19);v19=v19 + (1918 -(1088 + 829)) ;v60=1;end if (v60==(1697 -(194 + 1366 + 136))) then return v61;end end end v23=nil;v18=2;end if (v18==5) then v30=nil;function v30(v62,v63,v64)local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==1) then v72={...};v73=v12("#",...) -1 ;v69=2;end if (v69==3) then A,B=v28(v11(v74));if  not A[1] then local v97=v62[4][v70] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==2) then v74=nil;function v74()local v81=v65;local v82=v66;local v83=v67;local v84=v28;local v85={};local v86={};local v87={};for v98=0,v73 do if ((v98>=v83) or (((5587 + 4856) -7769)==(3652 + 1239))) then v85[v98-v83 ]=v72[v98 + (1152 -(736 + 415)) ];else v87[v98]=v72[v98 + 1 + 0 ];end end local v88=(v73-v83) + 1 ;local v89;local v90;while true do local v99=0 + 0 ;local v100;local v101;while true do if ((3930>=(8505 -6018)) and (v99==(351 -(52 + 299)))) then v100=0 + 0 ;v101=nil;v99=809 -(598 + 210) ;end if (((130 + 336)<(13302 -10491)) and (v99==(1 -0))) then while true do if ((v100==(0 -(0 -0))) or ((2452 -(82 + 781))<(481 + 100 + 360))) then v101=0 -0 ;while true do if ((2242<(1183 + 3069)) and ((1 + 0)==v101)) then if (((8028 -5340)>(2334 -758)) and (v90<=(1376 -(1026 + 326)))) then if ((v90<=(2 + 9)) or (((28542 -22187) -(1901 + 92))<((8388 -4562) -(5033 -2735)))) then if ((v90<=((1710 -(494 + 1204)) -7)) or (2985>(1832 + 1266))) then if ((v90<=(1797 -(331 + 1464))) or ((2805 -(117 + 68))==(5076 -1939))) then if ((v90<=0) or ((41 + 3633)>(4883 -(387 + 80)))) then v87[v89[3 -1 ]]=v89[3];elseif ((1699<(8148 -4787)) and (v90==(3 -2))) then v70=v89[1155 -(217 + 650 + 285) ];else do return;end end elseif (((487 + 246)==(218 + 515)) and (v90<=(8 -5))) then if ((v89[9 -7 ]==v87[v89[6 -2 ]]) or ((5911 -4160)>(904 + 3859))) then v70=v70 + (2 -1) ;else v70=v89[1935 -(1240 + 692) ];end elseif ((v90>(10 -6)) or ((1359 + 135)>=(18321 -13627))) then local v168=1880 -(310 + 1570) ;local v169;local v170;while true do if (((4145 -(320 + 593))==(4905 -(1435 + 238))) and (v168==(609 -(280 + 328)))) then while true do if ((v169==(0 -0)) or ((416 + 672)==(5348 -1608))) then v170=v89[2 + 0 ];do return v13(v87,v170,v170 + v89[7 -4 ] );end break;end end break;end if (((356 + 2137)<=4549) and (v168==((0 -0) + 0))) then v169=644 -(265 + 379) ;v170=nil;v168=2 -1 ;end end else local v171=314 -(136 + 178) ;local v172;local v173;local v174;local v175;while true do if ((v171==((1916 -707) -(291 + 156 + 761))) or ((2727 -(828 + (55 -33)))>=(4022 -1359))) then local v275=0 + 0 ;while true do if ((v275==(1 + 0)) or (2907>=(2078 + 163 + 769))) then v171=7 -5 ;break;end if ((v275==(0 + 0)) or ((5259 -3196)<=(972 + 236 + 430))) then v174=nil;v175=nil;v275=365 -(127 + 237) ;end end end if (((3401 -1441)==(4006 -2046)) and (v171==(737 -(105 + 632)))) then local v276=0;while true do if ((4435>(3724 -(60 + 344))) and (v276==((0 -0) -0))) then v172=0 -0 ;v173=nil;v276=1 -0 ;end if (((8943 -(6398 -(267 + 1022)))>1075) and (v276==(786 -(539 + 246)))) then v171=2 -1 ;break;end end end if ((v171==(1 + 1)) or ((3725 -(89 + 71))<(1091 + (994 -323)))) then while true do if ((((2209 + 4649) -4873)>=(2644 -1687)) and (v172==(2 -1))) then v175=1990 -(44 + 1946) ;for v325=v173,v89[5 -1 ] do local v326=0;local v327;local v328;while true do if ((v326==(1048 -(167 + 880))) or ((653 -201)>(4176 + 246))) then while true do if ((v327==(0 + 0)) or (((3439 -2192) -(2358 -(921 + 909)))>=958)) then v328=0 -0 ;while true do if ((v328==(0 -0)) or ((3720 -(47 + 203))<=(1977 + 1088))) then v175=v175 + (370 -(84 + 285)) ;v87[v325]=v174[v175];break;end end break;end end break;end if ((((0 -0) -0)==v326) or ((3653 -(199 + 866))>(11073 -(8372 -(1085 + 830))))) then v327=0 + 0 ;v328=nil;v326=1818 -(744 + 267 + 806) ;end end end break;end if ((v172==(736 -(450 + 286))) or ((711 + 572)>=(214 + 3616))) then local v310=349 -(262 + 87) ;local v311;while true do if ((v310==(0 + 0)) or (2093>=3553)) then v311=0 + 0 ;while true do if (((3806 -(299 + 5))<4321) and (v311==(1256 -((916 -(44 + 318)) + 701)))) then v172=1 -(0 + 0) ;break;end if ((v311==0) or ((13566 -9010)<(6148 -3728))) then local v384=426 -(385 + 41) ;while true do if (((0 -0)==v384) or ((2321 + 1625)<=(63 + 439))) then v173=v89[1953 -(1865 + 86) ];v174={v87[v173](v87[v173 + 1 ])};v384=1;end if ((3738>=779) and (v384==(2 -(1 + 0)))) then v311=473 -(230 + (556 -314)) ;break;end end end end break;end end end end break;end end end elseif (((7148 -4803)==(2306 + 39)) and (v90<=(23 -15))) then if ((v90<=6) or (3789<=923)) then do return v87[v89[2]];end elseif (((4534 -(47 + 411))>(3614 -(475 + 69))) and (v90>(1 + 6))) then local v176=0 -0 ;local v177;local v178;local v179;local v180;local v181;while true do if (((5834 -(640 + 882))>(1147 -(243 + 451))) and (v176==(2 + 0))) then v181=nil;while true do if (((15472 -10895)>=(2044 + 2291)) and (v177==(198 -(146 + 52)))) then local v312=0;while true do if (((1298 -578)<1175) and (v312==(1092 -(662 + 429)))) then v177=1 -0 ;break;end if ((v312==(0 -0)) or (((779 + 1922) -(230 + 75))>(5641 -(98 + 811)))) then v178=v89[708 -(410 + 296) ];v179,v180=v84(v87[v178](v13(v87,v178 + (1391 -(402 + 988)) ,v89[(1 -0) + 2 ])));v312=1444 -(968 + 475) ;end end end if ((v177==((2 -1) + (0 -0))) or ((1158 + 2200)>3376)) then local v313=778 -(343 + 435) ;while true do if ((v313==0) or ((1221 + (3556 -1728))<434)) then v71=(v180 + v178) -(833 -(227 + 605)) ;v181=1206 -(969 + 237) ;v313=1029 -(583 + 445) ;end if (((8646 -5833)<=(4200 -(121 + 5))) and (v313==(3 -2))) then v177=2 + 0 ;break;end end end if ((v177==(3 -1)) or ((6264 -3683)<=(3692 -(1191 + 85 + 635)))) then for v329=v178,v71 do local v330=97 -(14 + 83) ;while true do if (((420 + 116)<((4881 -(564 + 628)) -1921)) and (v330==(182 -(62 + (342 -222))))) then v181=v181 + 1 ;v87[v329]=v179[v181];break;end end end break;end end break;end if ((v176==(0 -0)) or (4042<=(5730 -3118))) then local v277=1621 -(160 + 1461) ;while true do if ((((2482 + 1606) -(49 + 494))<=(4673 -(54 + 61))) and (v277==((11 -8) -2))) then v176=(1458 -(1131 + 326)) + 0 ;break;end if ((v277==(0 -0)) or ((2571 + 2423)<(2732 + 22))) then v177=1839 -(1376 + 463) ;v178=nil;v277=1 + 0 ;end end end if (((1442 + 3443)>=131) and (v176==((3 -2) -(1654 -(479 + 1175))))) then v179=nil;v180=nil;v176=7 -5 ;end end else v87[v89[2 + 0 ]]=v87[v89[3]] * v87[v89[19 -(7 + 8) ]] ;end elseif ((v90<=(7 + 2)) or (2418<(472 -(205 + 145)))) then local v142=0 -(935 -(50 + 885)) ;local v143;local v144;while true do if ((387>=169) and ((959 -(811 + 148))==v142)) then v143=0 + 0 ;v144=nil;v142=1691 -(720 + 970) ;end if (((9725 -5196)>(1741 -(465 + 153))) and (v142==1)) then while true do if ((v143==(0 + (904 -(224 + 680)))) or ((9332 -6114)>=3833)) then v144=v89[2];v87[v144]=v87[v144](v13(v87,v144 + 1 ,v71));break;end end break;end end elseif (((1009 + (223 -166))<(6392 -2898)) and (v90==(1958 -(1529 + 419)))) then if (((226 + (11355 -6709))>=(3692 -1518)) and (v87[v89[2 -0 ]]==v89[3 + 1 ])) then v70=v70 + (1731 -((537 -356) + 1549)) ;else v70=v89[3 + (1840 -(780 + 1060)) ];end else v87[v89[1892 -(1884 + 6) ]]=v87[v89[3]] + v89[(2322 -1214) -(19 + (1263 -(80 + 98))) ] ;end elseif ((v90<=(82 -65)) or ((3031 -(168 + 171))>(3549 -(533 + 194)))) then if ((v90<=(1392 -(14 + 6 + 1358))) or ((5913 -3933)>=(5592 -(359 + 611)))) then if (((785 + (698 -372))==(2244 -(1453 -320))) and (v90<=(36 -(14 + 10)))) then local v145=0 -0 ;local v146;local v147;local v148;local v149;local v150;while true do if ((v145==(1 + 1)) or ((865 + 27 + 385)>(12213 -7420))) then v150=nil;while true do if ((v146==(1610 -(1553 + 55))) or (3102>(1893 + 2285))) then for v306=v147,v71 do local v307=478 -(275 + 203) ;local v308;while true do if ((v307==(0 -0)) or ((1013 + 2818 + 131)>=(6273 -(1771 + 18)))) then v308=0 -0 ;while true do if ((v308==(0 -0)) or ((159 -30)>(2610 + 2238))) then v150=v150 + (111 -(82 + 28)) ;v87[v306]=v148[v150];break;end end break;end end end break;end if ((v146==0) or (1115==(2309 + 131))) then local v288=0 -(0 -0) ;local v289;while true do if (((533 + 1638)<2287) and ((825 -(551 + 204 + 70))==v288)) then v289=1291 -(440 + 851) ;while true do if ((v289==0) or ((8331 -4154)<=(1750 -(325 + (1551 -(490 + 152)))))) then v147=v89[4 -2 ];v148,v149=v84(v87[v147](v87[v147 + (1 -0) + 0 ]));v289=1173 -(883 + (1236 -(654 + 293))) ;end if ((v289==(1628 -(1379 + 248))) or ((3850 + 371)<(2773 -(160 + 61)))) then v146=1;break;end end break;end end end if ((v146==(1 + 0)) or (((17183 -(73 + 279)) -12255)<=(1387 -514))) then local v290=1108 -(69 + 45 + 994) ;local v291;while true do if ((v290==0) or (790==((5199 -(1185 + 728)) -1969))) then v291=0;while true do if (((6104 -2471)==(5478 -(742 + 1103))) and (v291==(3 -2))) then v146=1 + 1 ;break;end if ((v291==(1701 -(681 + 1020))) or (3488==(1366 + 2842))) then local v368=0 + 0 ;while true do if (((2628 -2022)<=(3947 -2660)) and ((350 -(143 + 206))==v368)) then v291=1 + 0 ;break;end if ((v368==(87 -(85 + (1103 -(290 + 811))))) or ((2325 -915)>=(3792 -(312 + 1654)))) then v71=(v149 + v147) -1 ;v150=0;v368=1 + 0 ;end end end end break;end end end end break;end if (((2891 -(138 + 60))<(383 + 3117)) and (1==v145)) then local v257=0;while true do if ((v257==1) or ((13425 -10048)<=2327)) then v145=(2251 -1479) -(227 + 6 + 537) ;break;end if ((v257==((0 + 0) -0)) or ((4359 -2462)<=(1266 + 368))) then v148=nil;v149=nil;v257=1 + 0 ;end end end if (((5142 -3820)<4853) and (v145==0)) then v146=430 -(264 + 166) ;v147=nil;v145=1;end end elseif ((v90==13) or ((3097 + 819)<=(3700 -(1345 + 179)))) then if ((v87[v89[2]]~=v89[1746 -(1524 + 218) ]) or (2557<=(1886 -(227 + 626)))) then v70=v70 + 1 + 0 ;else v70=v89[7 -4 ];end elseif (((2605 -(564 + 112 + 166))<=(4974 -1938)) and (v89[2 + 0 ]<v87[v89[1 + 0 + 3 ]])) then v70=v70 + (279 -(157 + 121)) ;else v70=v89[3];end elseif (((2564 + 1758)<=(1478 + 3099)) and (v90<=15)) then v87[v89[(864 -(621 + 242)) + 1 ]]=v30(v82[v89[7 -4 ]],nil,v64);elseif ((v90==16) or ((486 -(152 + 210))>=(2775 -(1056 + 892)))) then local v184=(0 -0) -0 ;local v185;local v186;local v187;while true do if ((v184==1) or ((3259 -(200 + 200))==(298 + (2155 -(675 + 683))))) then v187=0 -0 ;for v292=v185,v89[4] do local v293=0;local v294;while true do if ((v293==(1395 -(1165 + 230))) or (3807==(298 + 2843))) then v294=0 + (1200 -(593 + 607)) ;while true do if ((v294==(0 -0)) or ((5972 -(48 + (2548 -1546)))<(2815 + 1518))) then v187=v187 + 1 + 0 ;v87[v292]=v186[v187];break;end end break;end end end break;end if ((v184==((2051 -(1002 + 385)) -(602 + 62))) or ((3547 -1849)>=3758)) then v185=v89[5 -3 ];v186={v87[v185](v13(v87,v185 + (2 -1) + 0 ,v71))};v184=1 -0 ;end end else v87[v89[9 -7 ]][v89[3]]=v89[4];end elseif ((v90<=20) or (1947>2695)) then if (((5829 -(2789 -1262))>=1635) and (v90<=18)) then for v164=v89[1 + 1 ],v89[231 -(198 + 30) ] do v87[v164]=nil;end elseif ((v90>(2 + 17)) or (1235==(6254 -(1497 + 165)))) then local v190=(0 -0) + 0 ;local v191;while true do if ((v190==(1917 -(1093 + (2699 -1875)))) or (2105<=(2985 -1101))) then v191=v89[6 -4 ];do return v13(v87,v191,v71);end break;end end else v87[v89[2]]=v64[v89[3]];end elseif ((v90<=(83 -61)) or ((536 -(1142 -772))==(3011 + 28))) then if (((133 + 1231)<(259 + 1560 + 1731)) and (v90>(1176 -(671 + 484)))) then local v194=0 + 0 ;local v195;local v196;local v197;while true do if ((1==v194) or ((2253 -795)>=(14885 -10844))) then v197=nil;while true do if ((v195==(0 -0)) or ((2589 + 159)>(8645 -4057))) then v196=v89[8 -6 ];v197={};v195=120 -(79 + 40) ;end if (((5077 -((1077 -(90 + 644)) + 89))>(2688 + 254)) and (v195==(1 + 0))) then for v331=1 -0 , #v86 do local v332=0 -0 ;local v333;local v334;while true do if ((1031<=3220) and (v332==(0 + 0))) then v333=0 + 0 ;v334=nil;v332=1;end if (((4878 -(11 + 608))>(3111 -(73 + 324))) and (v332==(1 + 0))) then while true do if ((v333==(0 + 0)) or ((2825 -(167 + 127))<=1270)) then v334=v86[v331];for v402=0, #v334 do local v403=147 -(27 + 120) ;local v404;local v405;local v406;while true do if (((331 + 769)>((24 + 1791) -(1190 + 53))) and (v403==(1 + 0))) then v406=v404[663 -(580 + 81) ];if (((v405==v87) and (v406>=v196)) or ((2159 -(650 + 681))>4975)) then local v419=0 -0 ;local v420;while true do if (((7203 -5117)>575) and (v419==(0 -0))) then v420=0;while true do if ((v420==(1477 -(213 + 1264))) or ((2085 -(2491 -1384))>=(4531 + 209))) then v197[v406]=v405[v406];v404[1 + 0 ]=v197;break;end end break;end end end break;end if ((((2720 -(174 + 1745)) + 2690)==3491) and (v403==(0 + 0))) then local v418=0 + (532 -(92 + 440)) ;while true do if (((0 + 0)==v418) or ((11615 -(5795 + 1815))==(109 -69))) then v404=v334[v402];v405=v404[1 + 0 ];v418=1 + 0 ;end if (((4600 -(611 + (2417 -1204)))>(281 -162)) and (v418==1)) then v403=(424 + 1105) -(752 + 776) ;break;end end end end end break;end end break;end end end break;end end break;end if (((784 -432)==(283 + 37 + 32)) and (v194==((3544 -1825) -(526 + (1326 -(33 + 100)))))) then v195=149 -(85 + 64) ;v196=nil;v194=561 -(169 + 324 + 67) ;end end else local v198=0;local v199;local v200;local v201;local v202;while true do if ((3070>=(4452 -2079)) and ((1 + 0)==v198)) then v201=nil;v202=nil;v198=1311 -(186 + (1689 -(104 + 462))) ;end if (((1126 -(16 + 11))==(2237 -1138)) and (v198==(0 + 0 + 0))) then v199=(0 -0) + 0 + 0 ;v200=nil;v198=(4 -3) + 0 ;end if ((1152<=(835 + 2519)) and (v198==(1 + 1))) then while true do if ((v199==((1896 -(351 + 1545)) + 0)) or ((5085 -((1865 -(455 + 633)) + 508))<(2502 -(175 + 22)))) then v200=0 -0 ;v201=nil;v199=3 -2 ;end if ((v199==(396 -(126 + 269))) or ((11457 -7611)>=(2784 + 2006))) then v202=nil;while true do if ((v200==(3 -2)) or ((7281 -5293)==(1083 -418))) then for v371=v201 + (3 -2) ,v89[3 -0 ] do v7(v202,v87[v371]);end break;end if ((v200==(0 + 0)) or ((6723 -5131)>(10720 -7183))) then local v356=0 + 0 ;while true do if (((6101 -2675)>1291) and (v356==(1399 -(232 + 1167)))) then local v385=956 -(29 + 927) ;while true do if ((v385==1) or ((12499 -8269)>(6003 -(953 + 384)))) then v356=3 -2 ;break;end if ((v385==(0 -0)) or ((1344 -890)<=(260 -85))) then v201=v89[1 + 1 + 0 ];v202=v87[v201];v385=1 -(1221 -(150 + 1071)) ;end end end if (((1 -0)==v356) or ((1396 -(20 + 101))>=(3719 + 1165))) then v200=1;break;end end end end break;end end break;end end end elseif (((3037 -(832 + 824))>=1350) and (v90>(59 -36))) then local v203=v89[4 -2 ];local v204=v89[1548 -(1208 + 336) ];local v205=v203 + (989 -(435 + 552)) ;local v206={v87[v203](v87[v203 + (1 -0) ],v87[v205])};for v258=1,v204 do v87[v205 + v258 ]=v206[v258];end local v207=v206[321 -(142 + 178) ];if (((4839 -(601 + 1 + 16))>((2897 -1239) -(35 + (162 -107)))) and v207) then local v264=0;local v265;local v266;while true do if ((1088<(5446 -(62 + (3309 -(1455 + 365))))) and ((1 -0)==v264)) then while true do if (((1157 -533)<(4927 -(938 + 13))) and (v265==(0 -0))) then v266=115 -(31 + 84) ;while true do if ((v266==(0 + 0)) or (553>(874 + 2778))) then v87[v205]=v207;v70=v89[1 + 1 + 1 ];break;end end break;end end break;end if (((5440 -(846 + 40 + 458))>(1319 -857)) and ((1471 -(531 + 940))==v264)) then v265=0 + 0 ;v266=nil;v264=1 + 0 ;end end else v70=v70 + (1 -0) ;end elseif (((4257 -(709 + 24))==(2854 + 670)) and v87[v89[199 -(83 + 105 + 9) ]]) then v70=v70 + (2 -(1585 -(1180 + 404))) ;else v70=v89[539 -(302 + 234) ];end elseif ((v90<=(2015 -(1491 + 487))) or ((7950 -4859)<=1278)) then if (((2970 -(641 + 121))<((460 -116) + 411 + 2068)) and (v90<=30)) then if ((v90<=(46 -19)) or (2984>(4501 -(446 + 309)))) then if ((v90<=25) or ((6792 -3754)<1697)) then v87[v89[2]]=v87[v89[(523 -(226 + 284)) -10 ]][v89[8 -4 ]];elseif ((v90>(1059 -(624 + 409))) or ((1823 -(111 + 640))>(9733 -6447))) then local v208=(0 + 0) -0 ;local v209;local v210;local v211;local v212;while true do if ((2325>=1279) and (v208==(3 -2))) then v211=nil;v212=nil;v208=2;end if (((4374 + 232)>363) and (v208==(1 + 1))) then while true do if (((1090 -(202 + 722))==((389 -311) + 88)) and (v209==(1 -0))) then v212=nil;while true do if ((v210==((0 -0) -(0 + 0))) or ((3150 + 481)<=(5887 -4272))) then local v357=595 -(69 + 526) ;while true do if ((v357==(1007 -(440 + 566))) or (4481==((4389 -2359) -(723 + 1098)))) then v210=3 -2 ;break;end if ((v357==((87 + 161) -(66 + 182))) or ((916 -300)>968)) then v211=v89[3];v212=v87[v211];v357=1 + 0 ;end end end if ((v210==(1 -0)) or ((2551 -(106 + 131))>(2449 + 1428))) then for v372=v211 + 1 ,v89[11 -7 ] do v212=v212   .. v87[v372] ;end v87[v89[2 -0 ]]=v212;break;end end break;end if ((v209==(280 -(152 + 128))) or ((4217 -(1169 + 659))<(1065 -789))) then local v315=0;while true do if ((v315==0) or ((8126 -5447)>=(8823 -5387))) then v210=1013 -(253 + 760) ;v211=nil;v315=2 -1 ;end if (((1874 + 1842)>(87 + 751)) and ((4 -3)==v315)) then v209=1 -0 ;break;end end end end break;end if ((v208==0) or ((104 + 432)>1557)) then v209=0 -0 ;v210=nil;v208=(786 -(742 + 43)) + (449 -(318 + 131)) ;end end else local v213=0 + 0 ;local v214;local v215;local v216;while true do if ((v213==1) or (2951==4005)) then local v280=0 -(0 -0) ;while true do if (((1590 -(8 + 16 + 349))<=(585 + 890)) and (v280==(0 + 0))) then v216={};v215=v10({},{__index=function(v335,v336)local v337=358 -(284 + 39 + 35) ;local v338;local v339;while true do if ((v337==(0 -0)) or ((14 + 37 + 71)>(388 + 3229))) then v338=0 -0 ;v339=nil;v337=1;end if ((v337==(1320 -(998 + 321))) or (3149<(3399 -(276 + 95)))) then while true do if ((v338==(0 -0)) or ((653 + 663)<(2395 -(384 + 853)))) then local v392=0 -(252 -(144 + 108)) ;while true do if (((704 -354)<(7571 -3651)) and ((0 -0)==v392)) then local v414=580 -(73 + 507) ;while true do if ((v414==0) or ((373 + 697)>(3814 -(69 + 111)))) then v339=v216[v336];return v339[3 -2 ][v339[7 -5 ]];end end end end end end break;end end end,__newindex=function(v340,v341,v342)local v343=0 + 0 ;local v344;local v345;local v346;while true do if ((v343==(1290 -(31 + 1259))) or (((4488 -(1103 + 880)) -((1909 -(24 + 1342)) + 355))<=((53 + 177) -80))) then v344=1985 -(1029 + 956) ;v345=nil;v343=1;end if (((121 + 480)<3046) and (v343==(212 -(124 + 87)))) then v346=nil;while true do if (((7703 -(320 + 4710))==(1966 + 707)) and (v344==0)) then local v393=0 -0 ;while true do if ((((8616 + 7692) -(12557 -(40 + 40)))>=(73 + 45)) and (v393==(1466 -(1230 + 235)))) then v344=2 -(2 -1) ;break;end if ((2472>=(1453 -(768 + 266))) and (v393==(0 + 0 + 0))) then v345=1051 -(714 + 337) ;v346=nil;v393=1406 -(1060 + (876 -531)) ;end end end if ((1==v344) or (1941<=(1798 + 118))) then while true do if ((v345==(0 -0)) or ((575 + 1718)<(736 + 1123))) then v346=v216[v341];v346[2 -1 ][v346[2 + 0 ]]=v342;break;end end break;end end break;end end end});v280=37 -(31 + 5) ;end if ((v280==1) or ((11039 -7813)<=(698 + 1655))) then v213=1075 -(760 + (566 -(237 + 16))) ;break;end end end if ((v213==(0 + 0)) or (((1581 + 4282) -(693 + 341))<(3439 -2134))) then v214=v82[v89[678 -(246 + 429) ]];v215=nil;v213=2 -1 ;end if (((4560 -1691)==2869) and (v213==(1199 -(660 + 537)))) then for v295=1321 -((1191 -(461 + 129)) + 719) ,v89[1559 -(1129 + 426) ] do local v296=0 -0 ;local v297;local v298;while true do if (((699 -(156 + 543))==v296) or ((9894 -6263)==(1623 -(99 + 1428)))) then v297=0;v298=nil;v296=1 + 0 ;end if (((1 + 0)==v296) or ((14394 -11045)<=(481 + 268))) then while true do if (((0 + 0)==v297) or ((1599 + 2922)<(5055 -(234 + 509)))) then v70=v70 + 1 ;v298=v81[v70];v297=1398 -(26 + 52 + 1319) ;end if ((2347==2347) and (v297==1)) then if ((v298[1820 -((673 -171) + 1317) ]==37) or ((2888 -1491)>(8517 -(1850 + 2868)))) then v216[v295-1 ]={v87,v298[11 -(17 -9) ]};else v216[v295-1 ]={v63,v298[2 + 1 ]};end v86[ #v86 + (1 -0) ]=v216;break;end end break;end end end v87[v89[1 + 1 ]]=v30(v214,v215,v64);break;end end end elseif (((3811 -(762 + 332))<4548) and (v90<=(1551 -(1253 + 182 + 88)))) then v64[v89[355 -(122 + 161 + 69) ]]=v87[v89[2 + 0 ]];elseif (((2078 -1495)<=(8364 -3565)) and (v90>((212 -126) -57))) then local v217=1265 -((2359 -(727 + 634)) + 267) ;local v218;local v219;local v220;while true do if (((3289 -(448 + 139 + 290))<((3522 -(273 + 48)) + 1354)) and (v217==(547 -((767 -436) + 215)))) then v220=v89[573 -(501 + 69) ];for v299=1 + 0 ,v220 do v219[v299]=v87[v218 + v299 ];end break;end if (((568 + 837)<3025) and ((0 -0)==v217)) then local v284=1270 -((2168 -(142 + 1559)) + 803) ;while true do if ((v284==0) or ((4840 -(407 + 562))>(5782 -(789 + 261)))) then v218=v89[1622 -(1347 + 273) ];v219=v87[v218];v284=1678 -(1566 + 111) ;end if (((2543 -(902 + 30))==(2337 -(15 + 711))) and (v284==(1 + 0))) then v217=1 -0 ;break;end end end end else local v221=0 + 0 ;local v222;local v223;local v224;local v225;while true do if ((v221==(1 -0)) or (1207>=3939)) then v224=nil;v225=nil;v221=2 + 0 ;end if (((434 -(374 + 58))==v221) or (112>=(2351 -(1227 + 644)))) then while true do if ((v222==(0 -0)) or ((2927 -(445 + 1458))==(10865 -7875))) then v223=0 + 0 ;v224=nil;v222=1;end if ((912<2230) and (v222==(1 -0))) then v225=nil;while true do if ((v223==(0 -0)) or ((4524 + 466)<(5844 -(98 + 1240)))) then local v359=241 -(88 + 153) ;while true do if ((v359==(1 + 0)) or ((20801 -(16923 -(241 + 860)))<=(3461 -1775))) then v223=1;break;end if ((3689>=(2289 + (2614 -(559 + 770)))) and (v359==((0 -0) -0))) then local v390=1278 -(134 + 60 + 1084) ;while true do if (((387 + 165 + 1133)>=(2076 -(253 + 657))) and ((1493 -(1279 + 213))==v390)) then v359=1 -0 ;break;end if ((v390==(0 -0)) or ((1207 + 2885)<1631)) then v224=v89[2];v225=v87[v89[2 + (4 -3) ]];v390=(2 + 0) -1 ;end end end end end if (((3 -2)==v223) or (((19433 -9189) -5423)<=((12 + 5728) -4457))) then v87[v224 + (1 -0) ]=v225;v87[v224]=v225[v89[(5687 -4487) -(543 + 653) ]];break;end end break;end end break;end if ((v221==0) or (1721<=551)) then v222=1152 -(77 + 226 + 849) ;v223=nil;v221=1538 -(736 + 801) ;end end end elseif ((v90<=33) or (278==(4350 -(879 + 663)))) then if (((2000 + 980)>=(6821 -5383)) and (v90<=(601 -(471 + 99)))) then local v156=(441 -142) -(233 + 66) ;local v157;local v158;local v159;while true do if (((1367 -(262 + 260))<(3353 -(577 + 294))) and (v156==(1 + 0))) then v159=nil;while true do if (((3561 -(320 + 325))>(3293 -1411)) and (v157==(490 -(286 + 204)))) then local v302=0 + 0 ;while true do if ((v302==0) or ((3076 -976)==664)) then v158=0 + 0 ;v159=nil;v302=1641 -(1503 + 137) ;end if ((v302==(1 -0)) or (((3004 -(111 + 899)) -1036)==(16467 -12577))) then v157=1;break;end end end if (((585 -(403 + 44))<=(7701 -5036)) and (v157==1)) then while true do if (((5153 -(1230 + 339))>=(2145 -(338 + 368))) and (v158==(1110 -(318 + 792)))) then v159=v89[1 + (1800 -(518 + 1281)) ];v87[v159]=v87[v159](v87[v159 + 1 + 0 ]);break;end end break;end end break;end if (((4401 + 45)>=865) and (v156==0)) then v157=0 + 0 ;v158=nil;v156=2 -1 ;end end elseif (((3056 + 496)<=(4523 -(6 + 37 + 630))) and (v90>(76 -44))) then v87[v89[(5 -2) -1 ]]=v87[v89[13 -10 ]] + v87[v89[4]] ;else local v227=1141 -(528 + 613) ;local v228;local v229;local v230;local v231;while true do if (((815 + 2338)>(1238 + 883)) and (v227==(2 -1))) then v230=nil;v231=nil;v227=1004 -(387 + 615) ;end if ((v227==(0 -0)) or ((332 + 2743)==2587)) then v228=110 -(49 + 61) ;v229=nil;v227=162 -(73 + 88) ;end if ((v227==(1 + 1)) or ((1237 -824)>(1443 + 1667))) then while true do if (((3306 -(132 + 71))>=(1573 -(144 + 34))) and (v228==(2 -1))) then v231=1388 -(27 + 1361) ;for v349=v229,v89[2 + 2 ] do local v350=1173 -(209 + 964) ;local v351;while true do if (((2253 + 2586)>=4521) and (v350==(0 + 0))) then v351=0;while true do if ((v351==(978 -(557 + 421))) or ((17199 -12715)<(1046 + 1368))) then v231=v231 + 1 ;v87[v349]=v230[v231];break;end end break;end end end break;end if ((1819<=(4648 -2727)) and (v228==0)) then local v318=0 -0 ;while true do if ((v318==((379 -(357 + 22)) -0)) or (((15677 -9306) -3397)>=(4238 + 412))) then v229=v89[2];v230={v87[v229](v13(v87,v229 + 1 + 0 ,v89[2 + 1 ]))};v318=1148 -(84 + 1063) ;end if ((v318==((8 -4) -3)) or ((397 + (1422 -(1045 + 203)))>((2349 -(743 + 643)) + 2933))) then v228=(2 -0) -1 ;break;end end end end break;end end end elseif (((9096 -5048)>(594 + 35)) and (v90<=(150 -115))) then if (((2826 -(88 + 978))<4071) and (v90>(89 -55))) then local v232=0 + 0 ;local v233;local v234;while true do if ((v232==(1465 -(1216 + 248))) or (3444>(5592 -(449 + 414)))) then while true do if (((1147 + 1735)<=(4267 -(639 + 471))) and (v233==(0 + (0 -0)))) then v234=v89[1760 -(341 + 1417) ];do return v87[v234](v13(v87,v234 + (880 -(831 + 48)) ,v89[357 -(319 + 35) ]));end break;end end break;end if (((41 + (1427 -(720 + 312)))<(6368 -3683)) and (v232==0)) then v233=0;v234=nil;v232=2 -1 ;end end else v87[v89[1148 -(610 + 536) ]]=v87[v89[4 -1 ]]/v89[634 -(78 + 552) ] ;end elseif ((4082>(6137 -3260)) and (v90>(69 -33))) then v87[v89[2 + 0 ]]=v87[v89[2 + 1 ]];else v87[v89[1 + 1 ]]= -v87[v89[804 -(580 + 221) ]];end elseif (((8209 -(14835 -9042))>1389) and (v90<=((40 + 1931) -((1411 -491) + (3527 -2519))))) then if ((v90<=((2366 -(379 + 366)) -(1562 + 19))) or ((6021 -2896)==4112)) then if ((v90<=(1923 -(763 + 1122))) or (((11775 -8614) -(375 + 531))<(3169 -(890 + (2188 -(693 + 865)))))) then local v160=0 + 0 ;local v161;local v162;while true do if ((v160==(0 + 0)) or ((190 + 1724)>=(12197 -8414))) then v161=0 + 0 ;v162=nil;v160=1119 -(328 + 790) ;end if ((v160==((1 + 1) -1)) or ((19 + 37)>=(2281 + 1213))) then while true do if (((4482 -(1013 + 272))<=(3507 + (1173 -(64 + 479)))) and ((0 -0)==v161)) then v162=v89[(2313 -(92 + 1671)) -(221 + (1157 -830)) ];v87[v162](v87[v162 + (331 -(129 + 201)) ]);break;end end break;end end elseif (((2321 -1339)>=(349 + 235)) and (v90==(7 + (1432 -(30 + 1370))))) then v87[v89[1 + 1 ]]=v89[3]~=(0 + 0) ;elseif ((v87[v89[1393 -(175 + 1216) ]]<v87[v89[451 -(89 + (564 -206)) ]]) or (((11941 -6645) -(745 + 810))<=(3133 + 26))) then v70=v70 + (1025 -(605 + 419)) ;else v70=v89[1980 -(394 + 460 + 1123) ];end elseif ((v90<=41) or ((14395 -10121)<222)) then v87[v89[2]]={};elseif ((v90==(33 + 9)) or (4980<=724)) then v87[v89[5 -3 ]]=v63[v89[3]];else v87[v89[2]][v89[(9 -6) -0 ]]=v87[v89[449 -(58 + (1240 -(537 + 316))) ]];end elseif ((v90<=(95 -49)) or ((42 + 2685)<=(6280 -3764))) then if (((4125 -(445 + 65))>=(820 + 234 + 842)) and (v90<=(2014 -(764 + 1206)))) then if (((2024 -981)<=(3537 -(2322 -(296 + 56)))) and (v87[v89[2]]~=v87[v89[4]])) then v70=v70 + 1 + 0 ;else v70=v89[1 + (1924 -(1394 + 528)) ];end elseif ((v90==(116 -71)) or ((1775 + 2005)==(2276 -1444))) then local v245=0 -0 ;local v246;local v247;while true do if ((v245==(0 -0)) or (((4132 -(1599 + 357)) + 13)<(3706 -(145 + 1514)))) then v246=0 + 0 ;v247=nil;v245=1;end if ((1==v245) or ((4622 -2785)<=(1964 -(450 + (3136 -1935))))) then while true do if ((v246==(0 -0)) or ((3023 + 1741)<(5409 -(555 + 1374)))) then v247=v89[2];v87[v247](v13(v87,v247 + 1 ,v89[(1061 -621) -(287 + 150) ]));break;end end break;end end else local v248=(0 -0) -0 ;local v249;local v250;while true do if ((1064<1128) and (v248==(1921 -(1856 + 65)))) then v249=1123 -(783 + 340) ;v250=nil;v248=1 + 0 ;end if (((311 -(217 + 93))==v248) or ((14915 -10396)<2790)) then while true do if (((9085 -4380)>(9983 -(8549 -(478 + 86)))) and (v249==0)) then v250=v89[(200 -120) -(4 + 74) ];v87[v250]=v87[v250](v13(v87,v250 + 1 + 0 ,v89[8 -5 ]));break;end end break;end end end elseif ((((22315 -16003) -1563)>(229 + 864)) and (v90<=48)) then if ((v90==(120 -(116 -43))) or ((1427 -597)>=1602)) then local v251=0;local v252;local v253;while true do if ((v251==1) or ((1756 -(15 + 1674))==(3147 -986))) then while true do if ((v252==(0 -0)) or ((4272 -(582 + 690))>=(4421 -(387 + (2029 -(881 + 841)))))) then v253=v89[1 + 1 ];v87[v253]=v87[v253]();break;end end break;end if (((1106 -(304 + 614))<(657 -(40 + 95))) and (v251==0)) then local v285=0 + 0 ;while true do if (((9404 -4857)==(1827 + 2720)) and (v285==(0 -0))) then v252=0 + 0 + 0 ;v253=nil;v285=2 -1 ;end if (((3389 -(75 + (2337 -(735 + 1146))))<(4524 -(573 + 13 + 73))) and (v285==(674 -(89 + 584)))) then v251=1 + 0 ;break;end end end end else v87[v89[1253 -(927 + 324) ]][v87[v89[1318 -(469 + 846) ]]]=v87[v89[4]];end elseif ((((2407 -(297 + 1119)) + 1631)<=((17108 -12609) -((218 -(49 + 5)) + 652))) and (v90==(1643 -(636 + 958)))) then v87[v89[3 -1 ]]();else v87[v89[465 -(183 + 280) ]]=v87[v89[3]] -v87[v89[1663 -(1124 + 535) ]] ;end v70=v70 + (950 -(324 + 625)) ;break;end if (((3173 -(932 + 925))>=(1172 -(29 + 288))) and (v101==(0 + 0 + 0 + 0))) then local v122=0 + 0 + 0 ;local v123;while true do if ((v122==0) or ((1657 + 1627)==(3999 + 5))) then v123=0 + 0 ;while true do if ((v123==(0 + 0 + 0)) or ((2340 + 3 + 376)>=(10520 -6707))) then local v131=0 + 0 ;while true do if ((v131==1) or ((19 + 96 + 220)>(930 + 117))) then v123=1;break;end if ((1981<(1386 + 1490)) and (v131==0)) then v89=v81[v70];v90=v89[2 -(285 -(243 + 41)) ];v131=1 + 0 ;end end end if ((v123==(1885 -(836 + 1048))) or ((3270 -(47 + 157))<(5590 -(10290 -6594)))) then v101=1 + 0 ;break;end end break;end end end end break;end end break;end end end end v69=3;end end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);end
